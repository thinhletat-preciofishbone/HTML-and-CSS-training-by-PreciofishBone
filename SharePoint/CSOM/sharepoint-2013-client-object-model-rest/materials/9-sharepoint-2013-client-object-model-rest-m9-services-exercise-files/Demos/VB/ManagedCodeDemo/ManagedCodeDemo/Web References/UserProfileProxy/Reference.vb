'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.19050
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.19050.
'
Namespace UserProfileProxy
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="UserProfileServiceSoap", [Namespace]:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(SPTimeZone)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(PropertyData())),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ValueData()))>  _
    Partial Public Class UserProfileService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetUserProfileByIndexOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateUserProfileByAccountNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserProfileByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserProfileByGuidOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserProfileSchemaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProfileSchemaNameByAccountNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPropertyChoiceListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModifyUserPropertyByAccountNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserPropertyByAccountNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateMemberGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddMembershipOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemoveMembershipOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateMembershipPrivacyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserMembershipsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserOrganizationsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserColleaguesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserLinksOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserPinnedLinksOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetInCommonOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCommonManagerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCommonColleaguesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCommonMembershipsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddColleagueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddColleagueWithoutEmailNotificationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemoveColleagueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateColleaguePrivacyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddPinnedLinkOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdatePinnedLinkOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemovePinnedLinkOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddLinkOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateLinkOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemoveLinkOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemoveAllLinksOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemoveAllPinnedLinksOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemoveAllColleaguesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemoveAllMembershipsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserProfileCountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddSuggestionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProfileSchemaNamesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProfileSchemaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLeadersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddLeaderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemoveLeaderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.ManagedCodeDemo.My.MySettings.Default.ManagedCodeDemo_UserProfileProxy_UserProfileService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetUserProfileByIndexCompleted As GetUserProfileByIndexCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateUserProfileByAccountNameCompleted As CreateUserProfileByAccountNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserProfileByNameCompleted As GetUserProfileByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserProfileByGuidCompleted As GetUserProfileByGuidCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserProfileSchemaCompleted As GetUserProfileSchemaCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProfileSchemaNameByAccountNameCompleted As GetProfileSchemaNameByAccountNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPropertyChoiceListCompleted As GetPropertyChoiceListCompletedEventHandler
        
        '''<remarks/>
        Public Event ModifyUserPropertyByAccountNameCompleted As ModifyUserPropertyByAccountNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserPropertyByAccountNameCompleted As GetUserPropertyByAccountNameCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateMemberGroupCompleted As CreateMemberGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event AddMembershipCompleted As AddMembershipCompletedEventHandler
        
        '''<remarks/>
        Public Event RemoveMembershipCompleted As RemoveMembershipCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateMembershipPrivacyCompleted As UpdateMembershipPrivacyCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserMembershipsCompleted As GetUserMembershipsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserOrganizationsCompleted As GetUserOrganizationsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserColleaguesCompleted As GetUserColleaguesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserLinksCompleted As GetUserLinksCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserPinnedLinksCompleted As GetUserPinnedLinksCompletedEventHandler
        
        '''<remarks/>
        Public Event GetInCommonCompleted As GetInCommonCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCommonManagerCompleted As GetCommonManagerCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCommonColleaguesCompleted As GetCommonColleaguesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCommonMembershipsCompleted As GetCommonMembershipsCompletedEventHandler
        
        '''<remarks/>
        Public Event AddColleagueCompleted As AddColleagueCompletedEventHandler
        
        '''<remarks/>
        Public Event AddColleagueWithoutEmailNotificationCompleted As AddColleagueWithoutEmailNotificationCompletedEventHandler
        
        '''<remarks/>
        Public Event RemoveColleagueCompleted As RemoveColleagueCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateColleaguePrivacyCompleted As UpdateColleaguePrivacyCompletedEventHandler
        
        '''<remarks/>
        Public Event AddPinnedLinkCompleted As AddPinnedLinkCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdatePinnedLinkCompleted As UpdatePinnedLinkCompletedEventHandler
        
        '''<remarks/>
        Public Event RemovePinnedLinkCompleted As RemovePinnedLinkCompletedEventHandler
        
        '''<remarks/>
        Public Event AddLinkCompleted As AddLinkCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateLinkCompleted As UpdateLinkCompletedEventHandler
        
        '''<remarks/>
        Public Event RemoveLinkCompleted As RemoveLinkCompletedEventHandler
        
        '''<remarks/>
        Public Event RemoveAllLinksCompleted As RemoveAllLinksCompletedEventHandler
        
        '''<remarks/>
        Public Event RemoveAllPinnedLinksCompleted As RemoveAllPinnedLinksCompletedEventHandler
        
        '''<remarks/>
        Public Event RemoveAllColleaguesCompleted As RemoveAllColleaguesCompletedEventHandler
        
        '''<remarks/>
        Public Event RemoveAllMembershipsCompleted As RemoveAllMembershipsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserProfileCountCompleted As GetUserProfileCountCompletedEventHandler
        
        '''<remarks/>
        Public Event AddSuggestionsCompleted As AddSuggestionsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProfileSchemaNamesCompleted As GetProfileSchemaNamesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProfileSchemaCompleted As GetProfileSchemaCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLeadersCompleted As GetLeadersCompletedEventHandler
        
        '''<remarks/>
        Public Event AddLeaderCompleted As AddLeaderCompletedEventHandler
        
        '''<remarks/>
        Public Event RemoveLeaderCompleted As RemoveLeaderCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUse"& _ 
            "rProfileByIndex", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserProfileByIndex(ByVal index As Integer) As GetUserProfileByIndexResult
            Dim results() As Object = Me.Invoke("GetUserProfileByIndex", New Object() {index})
            Return CType(results(0),GetUserProfileByIndexResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserProfileByIndexAsync(ByVal index As Integer)
            Me.GetUserProfileByIndexAsync(index, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserProfileByIndexAsync(ByVal index As Integer, ByVal userState As Object)
            If (Me.GetUserProfileByIndexOperationCompleted Is Nothing) Then
                Me.GetUserProfileByIndexOperationCompleted = AddressOf Me.OnGetUserProfileByIndexOperationCompleted
            End If
            Me.InvokeAsync("GetUserProfileByIndex", New Object() {index}, Me.GetUserProfileByIndexOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserProfileByIndexOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserProfileByIndexCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserProfileByIndexCompleted(Me, New GetUserProfileByIndexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Create"& _ 
            "UserProfileByAccountName", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateUserProfileByAccountName(ByVal accountName As String) As PropertyData()
            Dim results() As Object = Me.Invoke("CreateUserProfileByAccountName", New Object() {accountName})
            Return CType(results(0),PropertyData())
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateUserProfileByAccountNameAsync(ByVal accountName As String)
            Me.CreateUserProfileByAccountNameAsync(accountName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateUserProfileByAccountNameAsync(ByVal accountName As String, ByVal userState As Object)
            If (Me.CreateUserProfileByAccountNameOperationCompleted Is Nothing) Then
                Me.CreateUserProfileByAccountNameOperationCompleted = AddressOf Me.OnCreateUserProfileByAccountNameOperationCompleted
            End If
            Me.InvokeAsync("CreateUserProfileByAccountName", New Object() {accountName}, Me.CreateUserProfileByAccountNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateUserProfileByAccountNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateUserProfileByAccountNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateUserProfileByAccountNameCompleted(Me, New CreateUserProfileByAccountNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUse"& _ 
            "rProfileByName", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserProfileByName(ByVal AccountName As String) As PropertyData()
            Dim results() As Object = Me.Invoke("GetUserProfileByName", New Object() {AccountName})
            Return CType(results(0),PropertyData())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserProfileByNameAsync(ByVal AccountName As String)
            Me.GetUserProfileByNameAsync(AccountName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserProfileByNameAsync(ByVal AccountName As String, ByVal userState As Object)
            If (Me.GetUserProfileByNameOperationCompleted Is Nothing) Then
                Me.GetUserProfileByNameOperationCompleted = AddressOf Me.OnGetUserProfileByNameOperationCompleted
            End If
            Me.InvokeAsync("GetUserProfileByName", New Object() {AccountName}, Me.GetUserProfileByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserProfileByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserProfileByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserProfileByNameCompleted(Me, New GetUserProfileByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUse"& _ 
            "rProfileByGuid", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserProfileByGuid(ByVal guid As System.Guid) As PropertyData()
            Dim results() As Object = Me.Invoke("GetUserProfileByGuid", New Object() {guid})
            Return CType(results(0),PropertyData())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserProfileByGuidAsync(ByVal guid As System.Guid)
            Me.GetUserProfileByGuidAsync(guid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserProfileByGuidAsync(ByVal guid As System.Guid, ByVal userState As Object)
            If (Me.GetUserProfileByGuidOperationCompleted Is Nothing) Then
                Me.GetUserProfileByGuidOperationCompleted = AddressOf Me.OnGetUserProfileByGuidOperationCompleted
            End If
            Me.InvokeAsync("GetUserProfileByGuid", New Object() {guid}, Me.GetUserProfileByGuidOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserProfileByGuidOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserProfileByGuidCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserProfileByGuidCompleted(Me, New GetUserProfileByGuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUse"& _ 
            "rProfileSchema", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserProfileSchema() As PropertyInfo()
            Dim results() As Object = Me.Invoke("GetUserProfileSchema", New Object(-1) {})
            Return CType(results(0),PropertyInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserProfileSchemaAsync()
            Me.GetUserProfileSchemaAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserProfileSchemaAsync(ByVal userState As Object)
            If (Me.GetUserProfileSchemaOperationCompleted Is Nothing) Then
                Me.GetUserProfileSchemaOperationCompleted = AddressOf Me.OnGetUserProfileSchemaOperationCompleted
            End If
            Me.InvokeAsync("GetUserProfileSchema", New Object(-1) {}, Me.GetUserProfileSchemaOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserProfileSchemaOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserProfileSchemaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserProfileSchemaCompleted(Me, New GetUserProfileSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetPro"& _ 
            "fileSchemaNameByAccountName", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProfileSchemaNameByAccountName(ByVal accountName As String) As String
            Dim results() As Object = Me.Invoke("GetProfileSchemaNameByAccountName", New Object() {accountName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProfileSchemaNameByAccountNameAsync(ByVal accountName As String)
            Me.GetProfileSchemaNameByAccountNameAsync(accountName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProfileSchemaNameByAccountNameAsync(ByVal accountName As String, ByVal userState As Object)
            If (Me.GetProfileSchemaNameByAccountNameOperationCompleted Is Nothing) Then
                Me.GetProfileSchemaNameByAccountNameOperationCompleted = AddressOf Me.OnGetProfileSchemaNameByAccountNameOperationCompleted
            End If
            Me.InvokeAsync("GetProfileSchemaNameByAccountName", New Object() {accountName}, Me.GetProfileSchemaNameByAccountNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProfileSchemaNameByAccountNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProfileSchemaNameByAccountNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProfileSchemaNameByAccountNameCompleted(Me, New GetProfileSchemaNameByAccountNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetPro"& _ 
            "pertyChoiceList", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPropertyChoiceList(ByVal propertyName As String) As String()
            Dim results() As Object = Me.Invoke("GetPropertyChoiceList", New Object() {propertyName})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPropertyChoiceListAsync(ByVal propertyName As String)
            Me.GetPropertyChoiceListAsync(propertyName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPropertyChoiceListAsync(ByVal propertyName As String, ByVal userState As Object)
            If (Me.GetPropertyChoiceListOperationCompleted Is Nothing) Then
                Me.GetPropertyChoiceListOperationCompleted = AddressOf Me.OnGetPropertyChoiceListOperationCompleted
            End If
            Me.InvokeAsync("GetPropertyChoiceList", New Object() {propertyName}, Me.GetPropertyChoiceListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPropertyChoiceListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPropertyChoiceListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPropertyChoiceListCompleted(Me, New GetPropertyChoiceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Modify"& _ 
            "UserPropertyByAccountName", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ModifyUserPropertyByAccountName(ByVal accountName As String, ByVal newData() As PropertyData)
            Me.Invoke("ModifyUserPropertyByAccountName", New Object() {accountName, newData})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModifyUserPropertyByAccountNameAsync(ByVal accountName As String, ByVal newData() As PropertyData)
            Me.ModifyUserPropertyByAccountNameAsync(accountName, newData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModifyUserPropertyByAccountNameAsync(ByVal accountName As String, ByVal newData() As PropertyData, ByVal userState As Object)
            If (Me.ModifyUserPropertyByAccountNameOperationCompleted Is Nothing) Then
                Me.ModifyUserPropertyByAccountNameOperationCompleted = AddressOf Me.OnModifyUserPropertyByAccountNameOperationCompleted
            End If
            Me.InvokeAsync("ModifyUserPropertyByAccountName", New Object() {accountName, newData}, Me.ModifyUserPropertyByAccountNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnModifyUserPropertyByAccountNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModifyUserPropertyByAccountNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModifyUserPropertyByAccountNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUse"& _ 
            "rPropertyByAccountName", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserPropertyByAccountName(ByVal accountName As String, ByVal propertyName As String) As PropertyData
            Dim results() As Object = Me.Invoke("GetUserPropertyByAccountName", New Object() {accountName, propertyName})
            Return CType(results(0),PropertyData)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserPropertyByAccountNameAsync(ByVal accountName As String, ByVal propertyName As String)
            Me.GetUserPropertyByAccountNameAsync(accountName, propertyName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserPropertyByAccountNameAsync(ByVal accountName As String, ByVal propertyName As String, ByVal userState As Object)
            If (Me.GetUserPropertyByAccountNameOperationCompleted Is Nothing) Then
                Me.GetUserPropertyByAccountNameOperationCompleted = AddressOf Me.OnGetUserPropertyByAccountNameOperationCompleted
            End If
            Me.InvokeAsync("GetUserPropertyByAccountName", New Object() {accountName, propertyName}, Me.GetUserPropertyByAccountNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserPropertyByAccountNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserPropertyByAccountNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserPropertyByAccountNameCompleted(Me, New GetUserPropertyByAccountNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Create"& _ 
            "MemberGroup", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CreateMemberGroup(ByVal membershipInfo As MembershipData)
            Me.Invoke("CreateMemberGroup", New Object() {membershipInfo})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateMemberGroupAsync(ByVal membershipInfo As MembershipData)
            Me.CreateMemberGroupAsync(membershipInfo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateMemberGroupAsync(ByVal membershipInfo As MembershipData, ByVal userState As Object)
            If (Me.CreateMemberGroupOperationCompleted Is Nothing) Then
                Me.CreateMemberGroupOperationCompleted = AddressOf Me.OnCreateMemberGroupOperationCompleted
            End If
            Me.InvokeAsync("CreateMemberGroup", New Object() {membershipInfo}, Me.CreateMemberGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateMemberGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateMemberGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateMemberGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/AddMem"& _ 
            "bership", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddMembership(ByVal accountName As String, ByVal membershipInfo As MembershipData, ByVal group As String, ByVal privacy As Privacy) As MembershipData
            Dim results() As Object = Me.Invoke("AddMembership", New Object() {accountName, membershipInfo, group, privacy})
            Return CType(results(0),MembershipData)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddMembershipAsync(ByVal accountName As String, ByVal membershipInfo As MembershipData, ByVal group As String, ByVal privacy As Privacy)
            Me.AddMembershipAsync(accountName, membershipInfo, group, privacy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddMembershipAsync(ByVal accountName As String, ByVal membershipInfo As MembershipData, ByVal group As String, ByVal privacy As Privacy, ByVal userState As Object)
            If (Me.AddMembershipOperationCompleted Is Nothing) Then
                Me.AddMembershipOperationCompleted = AddressOf Me.OnAddMembershipOperationCompleted
            End If
            Me.InvokeAsync("AddMembership", New Object() {accountName, membershipInfo, group, privacy}, Me.AddMembershipOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddMembershipOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddMembershipCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddMembershipCompleted(Me, New AddMembershipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Remove"& _ 
            "Membership", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RemoveMembership(ByVal accountName As String, ByVal sourceInternal As System.Guid, ByVal sourceReference As String)
            Me.Invoke("RemoveMembership", New Object() {accountName, sourceInternal, sourceReference})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveMembershipAsync(ByVal accountName As String, ByVal sourceInternal As System.Guid, ByVal sourceReference As String)
            Me.RemoveMembershipAsync(accountName, sourceInternal, sourceReference, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveMembershipAsync(ByVal accountName As String, ByVal sourceInternal As System.Guid, ByVal sourceReference As String, ByVal userState As Object)
            If (Me.RemoveMembershipOperationCompleted Is Nothing) Then
                Me.RemoveMembershipOperationCompleted = AddressOf Me.OnRemoveMembershipOperationCompleted
            End If
            Me.InvokeAsync("RemoveMembership", New Object() {accountName, sourceInternal, sourceReference}, Me.RemoveMembershipOperationCompleted, userState)
        End Sub
        
        Private Sub OnRemoveMembershipOperationCompleted(ByVal arg As Object)
            If (Not (Me.RemoveMembershipCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemoveMembershipCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Update"& _ 
            "MembershipPrivacy", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateMembershipPrivacy(ByVal accountName As String, ByVal sourceInternal As System.Guid, ByVal sourceReference As String, ByVal newPrivacy As Privacy)
            Me.Invoke("UpdateMembershipPrivacy", New Object() {accountName, sourceInternal, sourceReference, newPrivacy})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateMembershipPrivacyAsync(ByVal accountName As String, ByVal sourceInternal As System.Guid, ByVal sourceReference As String, ByVal newPrivacy As Privacy)
            Me.UpdateMembershipPrivacyAsync(accountName, sourceInternal, sourceReference, newPrivacy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateMembershipPrivacyAsync(ByVal accountName As String, ByVal sourceInternal As System.Guid, ByVal sourceReference As String, ByVal newPrivacy As Privacy, ByVal userState As Object)
            If (Me.UpdateMembershipPrivacyOperationCompleted Is Nothing) Then
                Me.UpdateMembershipPrivacyOperationCompleted = AddressOf Me.OnUpdateMembershipPrivacyOperationCompleted
            End If
            Me.InvokeAsync("UpdateMembershipPrivacy", New Object() {accountName, sourceInternal, sourceReference, newPrivacy}, Me.UpdateMembershipPrivacyOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateMembershipPrivacyOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateMembershipPrivacyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateMembershipPrivacyCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUse"& _ 
            "rMemberships", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserMemberships(ByVal accountName As String) As MembershipData()
            Dim results() As Object = Me.Invoke("GetUserMemberships", New Object() {accountName})
            Return CType(results(0),MembershipData())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserMembershipsAsync(ByVal accountName As String)
            Me.GetUserMembershipsAsync(accountName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserMembershipsAsync(ByVal accountName As String, ByVal userState As Object)
            If (Me.GetUserMembershipsOperationCompleted Is Nothing) Then
                Me.GetUserMembershipsOperationCompleted = AddressOf Me.OnGetUserMembershipsOperationCompleted
            End If
            Me.InvokeAsync("GetUserMemberships", New Object() {accountName}, Me.GetUserMembershipsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserMembershipsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserMembershipsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserMembershipsCompleted(Me, New GetUserMembershipsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUse"& _ 
            "rOrganizations", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserOrganizations(ByVal accountName As String) As OrganizationProfileData()
            Dim results() As Object = Me.Invoke("GetUserOrganizations", New Object() {accountName})
            Return CType(results(0),OrganizationProfileData())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserOrganizationsAsync(ByVal accountName As String)
            Me.GetUserOrganizationsAsync(accountName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserOrganizationsAsync(ByVal accountName As String, ByVal userState As Object)
            If (Me.GetUserOrganizationsOperationCompleted Is Nothing) Then
                Me.GetUserOrganizationsOperationCompleted = AddressOf Me.OnGetUserOrganizationsOperationCompleted
            End If
            Me.InvokeAsync("GetUserOrganizations", New Object() {accountName}, Me.GetUserOrganizationsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserOrganizationsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserOrganizationsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserOrganizationsCompleted(Me, New GetUserOrganizationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUse"& _ 
            "rColleagues", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserColleagues(ByVal accountName As String) As ContactData()
            Dim results() As Object = Me.Invoke("GetUserColleagues", New Object() {accountName})
            Return CType(results(0),ContactData())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserColleaguesAsync(ByVal accountName As String)
            Me.GetUserColleaguesAsync(accountName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserColleaguesAsync(ByVal accountName As String, ByVal userState As Object)
            If (Me.GetUserColleaguesOperationCompleted Is Nothing) Then
                Me.GetUserColleaguesOperationCompleted = AddressOf Me.OnGetUserColleaguesOperationCompleted
            End If
            Me.InvokeAsync("GetUserColleagues", New Object() {accountName}, Me.GetUserColleaguesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserColleaguesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserColleaguesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserColleaguesCompleted(Me, New GetUserColleaguesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUse"& _ 
            "rLinks", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserLinks(ByVal accountName As String) As QuickLinkData()
            Dim results() As Object = Me.Invoke("GetUserLinks", New Object() {accountName})
            Return CType(results(0),QuickLinkData())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserLinksAsync(ByVal accountName As String)
            Me.GetUserLinksAsync(accountName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserLinksAsync(ByVal accountName As String, ByVal userState As Object)
            If (Me.GetUserLinksOperationCompleted Is Nothing) Then
                Me.GetUserLinksOperationCompleted = AddressOf Me.OnGetUserLinksOperationCompleted
            End If
            Me.InvokeAsync("GetUserLinks", New Object() {accountName}, Me.GetUserLinksOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserLinksOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserLinksCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserLinksCompleted(Me, New GetUserLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUse"& _ 
            "rPinnedLinks", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserPinnedLinks(ByVal accountName As String) As PinnedLinkData()
            Dim results() As Object = Me.Invoke("GetUserPinnedLinks", New Object() {accountName})
            Return CType(results(0),PinnedLinkData())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserPinnedLinksAsync(ByVal accountName As String)
            Me.GetUserPinnedLinksAsync(accountName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserPinnedLinksAsync(ByVal accountName As String, ByVal userState As Object)
            If (Me.GetUserPinnedLinksOperationCompleted Is Nothing) Then
                Me.GetUserPinnedLinksOperationCompleted = AddressOf Me.OnGetUserPinnedLinksOperationCompleted
            End If
            Me.InvokeAsync("GetUserPinnedLinks", New Object() {accountName}, Me.GetUserPinnedLinksOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserPinnedLinksOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserPinnedLinksCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserPinnedLinksCompleted(Me, New GetUserPinnedLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetInC"& _ 
            "ommon", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInCommon(ByVal accountName As String) As InCommonData
            Dim results() As Object = Me.Invoke("GetInCommon", New Object() {accountName})
            Return CType(results(0),InCommonData)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetInCommonAsync(ByVal accountName As String)
            Me.GetInCommonAsync(accountName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetInCommonAsync(ByVal accountName As String, ByVal userState As Object)
            If (Me.GetInCommonOperationCompleted Is Nothing) Then
                Me.GetInCommonOperationCompleted = AddressOf Me.OnGetInCommonOperationCompleted
            End If
            Me.InvokeAsync("GetInCommon", New Object() {accountName}, Me.GetInCommonOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetInCommonOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetInCommonCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetInCommonCompleted(Me, New GetInCommonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetCom"& _ 
            "monManager", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCommonManager(ByVal accountName As String) As ContactData
            Dim results() As Object = Me.Invoke("GetCommonManager", New Object() {accountName})
            Return CType(results(0),ContactData)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCommonManagerAsync(ByVal accountName As String)
            Me.GetCommonManagerAsync(accountName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCommonManagerAsync(ByVal accountName As String, ByVal userState As Object)
            If (Me.GetCommonManagerOperationCompleted Is Nothing) Then
                Me.GetCommonManagerOperationCompleted = AddressOf Me.OnGetCommonManagerOperationCompleted
            End If
            Me.InvokeAsync("GetCommonManager", New Object() {accountName}, Me.GetCommonManagerOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCommonManagerOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCommonManagerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCommonManagerCompleted(Me, New GetCommonManagerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetCom"& _ 
            "monColleagues", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCommonColleagues(ByVal accountName As String) As ContactData()
            Dim results() As Object = Me.Invoke("GetCommonColleagues", New Object() {accountName})
            Return CType(results(0),ContactData())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCommonColleaguesAsync(ByVal accountName As String)
            Me.GetCommonColleaguesAsync(accountName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCommonColleaguesAsync(ByVal accountName As String, ByVal userState As Object)
            If (Me.GetCommonColleaguesOperationCompleted Is Nothing) Then
                Me.GetCommonColleaguesOperationCompleted = AddressOf Me.OnGetCommonColleaguesOperationCompleted
            End If
            Me.InvokeAsync("GetCommonColleagues", New Object() {accountName}, Me.GetCommonColleaguesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCommonColleaguesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCommonColleaguesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCommonColleaguesCompleted(Me, New GetCommonColleaguesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetCom"& _ 
            "monMemberships", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCommonMemberships(ByVal accountName As String) As MembershipData()
            Dim results() As Object = Me.Invoke("GetCommonMemberships", New Object() {accountName})
            Return CType(results(0),MembershipData())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCommonMembershipsAsync(ByVal accountName As String)
            Me.GetCommonMembershipsAsync(accountName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCommonMembershipsAsync(ByVal accountName As String, ByVal userState As Object)
            If (Me.GetCommonMembershipsOperationCompleted Is Nothing) Then
                Me.GetCommonMembershipsOperationCompleted = AddressOf Me.OnGetCommonMembershipsOperationCompleted
            End If
            Me.InvokeAsync("GetCommonMemberships", New Object() {accountName}, Me.GetCommonMembershipsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCommonMembershipsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCommonMembershipsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCommonMembershipsCompleted(Me, New GetCommonMembershipsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/AddCol"& _ 
            "league", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddColleague(ByVal accountName As String, ByVal colleagueAccountName As String, ByVal group As String, ByVal privacy As Privacy, ByVal isInWorkGroup As Boolean) As ContactData
            Dim results() As Object = Me.Invoke("AddColleague", New Object() {accountName, colleagueAccountName, group, privacy, isInWorkGroup})
            Return CType(results(0),ContactData)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddColleagueAsync(ByVal accountName As String, ByVal colleagueAccountName As String, ByVal group As String, ByVal privacy As Privacy, ByVal isInWorkGroup As Boolean)
            Me.AddColleagueAsync(accountName, colleagueAccountName, group, privacy, isInWorkGroup, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddColleagueAsync(ByVal accountName As String, ByVal colleagueAccountName As String, ByVal group As String, ByVal privacy As Privacy, ByVal isInWorkGroup As Boolean, ByVal userState As Object)
            If (Me.AddColleagueOperationCompleted Is Nothing) Then
                Me.AddColleagueOperationCompleted = AddressOf Me.OnAddColleagueOperationCompleted
            End If
            Me.InvokeAsync("AddColleague", New Object() {accountName, colleagueAccountName, group, privacy, isInWorkGroup}, Me.AddColleagueOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddColleagueOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddColleagueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddColleagueCompleted(Me, New AddColleagueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/AddCol"& _ 
            "leagueWithoutEmailNotification", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddColleagueWithoutEmailNotification(ByVal accountName As String, ByVal colleagueAccountName As String, ByVal group As String, ByVal privacy As Privacy, ByVal isInWorkGroup As Boolean) As ContactData
            Dim results() As Object = Me.Invoke("AddColleagueWithoutEmailNotification", New Object() {accountName, colleagueAccountName, group, privacy, isInWorkGroup})
            Return CType(results(0),ContactData)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddColleagueWithoutEmailNotificationAsync(ByVal accountName As String, ByVal colleagueAccountName As String, ByVal group As String, ByVal privacy As Privacy, ByVal isInWorkGroup As Boolean)
            Me.AddColleagueWithoutEmailNotificationAsync(accountName, colleagueAccountName, group, privacy, isInWorkGroup, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddColleagueWithoutEmailNotificationAsync(ByVal accountName As String, ByVal colleagueAccountName As String, ByVal group As String, ByVal privacy As Privacy, ByVal isInWorkGroup As Boolean, ByVal userState As Object)
            If (Me.AddColleagueWithoutEmailNotificationOperationCompleted Is Nothing) Then
                Me.AddColleagueWithoutEmailNotificationOperationCompleted = AddressOf Me.OnAddColleagueWithoutEmailNotificationOperationCompleted
            End If
            Me.InvokeAsync("AddColleagueWithoutEmailNotification", New Object() {accountName, colleagueAccountName, group, privacy, isInWorkGroup}, Me.AddColleagueWithoutEmailNotificationOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddColleagueWithoutEmailNotificationOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddColleagueWithoutEmailNotificationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddColleagueWithoutEmailNotificationCompleted(Me, New AddColleagueWithoutEmailNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Remove"& _ 
            "Colleague", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RemoveColleague(ByVal accountName As String, ByVal colleagueAccountName As String)
            Me.Invoke("RemoveColleague", New Object() {accountName, colleagueAccountName})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveColleagueAsync(ByVal accountName As String, ByVal colleagueAccountName As String)
            Me.RemoveColleagueAsync(accountName, colleagueAccountName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveColleagueAsync(ByVal accountName As String, ByVal colleagueAccountName As String, ByVal userState As Object)
            If (Me.RemoveColleagueOperationCompleted Is Nothing) Then
                Me.RemoveColleagueOperationCompleted = AddressOf Me.OnRemoveColleagueOperationCompleted
            End If
            Me.InvokeAsync("RemoveColleague", New Object() {accountName, colleagueAccountName}, Me.RemoveColleagueOperationCompleted, userState)
        End Sub
        
        Private Sub OnRemoveColleagueOperationCompleted(ByVal arg As Object)
            If (Not (Me.RemoveColleagueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemoveColleagueCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Update"& _ 
            "ColleaguePrivacy", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateColleaguePrivacy(ByVal accountName As String, ByVal colleagueAccountName As String, ByVal newPrivacy As Privacy)
            Me.Invoke("UpdateColleaguePrivacy", New Object() {accountName, colleagueAccountName, newPrivacy})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateColleaguePrivacyAsync(ByVal accountName As String, ByVal colleagueAccountName As String, ByVal newPrivacy As Privacy)
            Me.UpdateColleaguePrivacyAsync(accountName, colleagueAccountName, newPrivacy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateColleaguePrivacyAsync(ByVal accountName As String, ByVal colleagueAccountName As String, ByVal newPrivacy As Privacy, ByVal userState As Object)
            If (Me.UpdateColleaguePrivacyOperationCompleted Is Nothing) Then
                Me.UpdateColleaguePrivacyOperationCompleted = AddressOf Me.OnUpdateColleaguePrivacyOperationCompleted
            End If
            Me.InvokeAsync("UpdateColleaguePrivacy", New Object() {accountName, colleagueAccountName, newPrivacy}, Me.UpdateColleaguePrivacyOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateColleaguePrivacyOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateColleaguePrivacyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateColleaguePrivacyCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/AddPin"& _ 
            "nedLink", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddPinnedLink(ByVal accountName As String, ByVal name As String, ByVal url As String) As PinnedLinkData
            Dim results() As Object = Me.Invoke("AddPinnedLink", New Object() {accountName, name, url})
            Return CType(results(0),PinnedLinkData)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddPinnedLinkAsync(ByVal accountName As String, ByVal name As String, ByVal url As String)
            Me.AddPinnedLinkAsync(accountName, name, url, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddPinnedLinkAsync(ByVal accountName As String, ByVal name As String, ByVal url As String, ByVal userState As Object)
            If (Me.AddPinnedLinkOperationCompleted Is Nothing) Then
                Me.AddPinnedLinkOperationCompleted = AddressOf Me.OnAddPinnedLinkOperationCompleted
            End If
            Me.InvokeAsync("AddPinnedLink", New Object() {accountName, name, url}, Me.AddPinnedLinkOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddPinnedLinkOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddPinnedLinkCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddPinnedLinkCompleted(Me, New AddPinnedLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Update"& _ 
            "PinnedLink", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdatePinnedLink(ByVal accountName As String, ByVal data As PinnedLinkData)
            Me.Invoke("UpdatePinnedLink", New Object() {accountName, data})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdatePinnedLinkAsync(ByVal accountName As String, ByVal data As PinnedLinkData)
            Me.UpdatePinnedLinkAsync(accountName, data, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdatePinnedLinkAsync(ByVal accountName As String, ByVal data As PinnedLinkData, ByVal userState As Object)
            If (Me.UpdatePinnedLinkOperationCompleted Is Nothing) Then
                Me.UpdatePinnedLinkOperationCompleted = AddressOf Me.OnUpdatePinnedLinkOperationCompleted
            End If
            Me.InvokeAsync("UpdatePinnedLink", New Object() {accountName, data}, Me.UpdatePinnedLinkOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdatePinnedLinkOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdatePinnedLinkCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdatePinnedLinkCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Remove"& _ 
            "PinnedLink", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RemovePinnedLink(ByVal accountName As String, ByVal id As Integer)
            Me.Invoke("RemovePinnedLink", New Object() {accountName, id})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemovePinnedLinkAsync(ByVal accountName As String, ByVal id As Integer)
            Me.RemovePinnedLinkAsync(accountName, id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemovePinnedLinkAsync(ByVal accountName As String, ByVal id As Integer, ByVal userState As Object)
            If (Me.RemovePinnedLinkOperationCompleted Is Nothing) Then
                Me.RemovePinnedLinkOperationCompleted = AddressOf Me.OnRemovePinnedLinkOperationCompleted
            End If
            Me.InvokeAsync("RemovePinnedLink", New Object() {accountName, id}, Me.RemovePinnedLinkOperationCompleted, userState)
        End Sub
        
        Private Sub OnRemovePinnedLinkOperationCompleted(ByVal arg As Object)
            If (Not (Me.RemovePinnedLinkCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemovePinnedLinkCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/AddLin"& _ 
            "k", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddLink(ByVal accountName As String, ByVal name As String, ByVal url As String, ByVal group As String, ByVal privacy As Privacy) As QuickLinkData
            Dim results() As Object = Me.Invoke("AddLink", New Object() {accountName, name, url, group, privacy})
            Return CType(results(0),QuickLinkData)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddLinkAsync(ByVal accountName As String, ByVal name As String, ByVal url As String, ByVal group As String, ByVal privacy As Privacy)
            Me.AddLinkAsync(accountName, name, url, group, privacy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddLinkAsync(ByVal accountName As String, ByVal name As String, ByVal url As String, ByVal group As String, ByVal privacy As Privacy, ByVal userState As Object)
            If (Me.AddLinkOperationCompleted Is Nothing) Then
                Me.AddLinkOperationCompleted = AddressOf Me.OnAddLinkOperationCompleted
            End If
            Me.InvokeAsync("AddLink", New Object() {accountName, name, url, group, privacy}, Me.AddLinkOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddLinkOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddLinkCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddLinkCompleted(Me, New AddLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Update"& _ 
            "Link", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateLink(ByVal accountName As String, ByVal data As QuickLinkData)
            Me.Invoke("UpdateLink", New Object() {accountName, data})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateLinkAsync(ByVal accountName As String, ByVal data As QuickLinkData)
            Me.UpdateLinkAsync(accountName, data, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateLinkAsync(ByVal accountName As String, ByVal data As QuickLinkData, ByVal userState As Object)
            If (Me.UpdateLinkOperationCompleted Is Nothing) Then
                Me.UpdateLinkOperationCompleted = AddressOf Me.OnUpdateLinkOperationCompleted
            End If
            Me.InvokeAsync("UpdateLink", New Object() {accountName, data}, Me.UpdateLinkOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateLinkOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateLinkCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateLinkCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Remove"& _ 
            "Link", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RemoveLink(ByVal accountName As String, ByVal id As Integer)
            Me.Invoke("RemoveLink", New Object() {accountName, id})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveLinkAsync(ByVal accountName As String, ByVal id As Integer)
            Me.RemoveLinkAsync(accountName, id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveLinkAsync(ByVal accountName As String, ByVal id As Integer, ByVal userState As Object)
            If (Me.RemoveLinkOperationCompleted Is Nothing) Then
                Me.RemoveLinkOperationCompleted = AddressOf Me.OnRemoveLinkOperationCompleted
            End If
            Me.InvokeAsync("RemoveLink", New Object() {accountName, id}, Me.RemoveLinkOperationCompleted, userState)
        End Sub
        
        Private Sub OnRemoveLinkOperationCompleted(ByVal arg As Object)
            If (Not (Me.RemoveLinkCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemoveLinkCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Remove"& _ 
            "AllLinks", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RemoveAllLinks(ByVal accountName As String)
            Me.Invoke("RemoveAllLinks", New Object() {accountName})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveAllLinksAsync(ByVal accountName As String)
            Me.RemoveAllLinksAsync(accountName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveAllLinksAsync(ByVal accountName As String, ByVal userState As Object)
            If (Me.RemoveAllLinksOperationCompleted Is Nothing) Then
                Me.RemoveAllLinksOperationCompleted = AddressOf Me.OnRemoveAllLinksOperationCompleted
            End If
            Me.InvokeAsync("RemoveAllLinks", New Object() {accountName}, Me.RemoveAllLinksOperationCompleted, userState)
        End Sub
        
        Private Sub OnRemoveAllLinksOperationCompleted(ByVal arg As Object)
            If (Not (Me.RemoveAllLinksCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemoveAllLinksCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Remove"& _ 
            "AllPinnedLinks", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RemoveAllPinnedLinks(ByVal accountName As String)
            Me.Invoke("RemoveAllPinnedLinks", New Object() {accountName})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveAllPinnedLinksAsync(ByVal accountName As String)
            Me.RemoveAllPinnedLinksAsync(accountName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveAllPinnedLinksAsync(ByVal accountName As String, ByVal userState As Object)
            If (Me.RemoveAllPinnedLinksOperationCompleted Is Nothing) Then
                Me.RemoveAllPinnedLinksOperationCompleted = AddressOf Me.OnRemoveAllPinnedLinksOperationCompleted
            End If
            Me.InvokeAsync("RemoveAllPinnedLinks", New Object() {accountName}, Me.RemoveAllPinnedLinksOperationCompleted, userState)
        End Sub
        
        Private Sub OnRemoveAllPinnedLinksOperationCompleted(ByVal arg As Object)
            If (Not (Me.RemoveAllPinnedLinksCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemoveAllPinnedLinksCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Remove"& _ 
            "AllColleagues", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RemoveAllColleagues(ByVal accountName As String)
            Me.Invoke("RemoveAllColleagues", New Object() {accountName})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveAllColleaguesAsync(ByVal accountName As String)
            Me.RemoveAllColleaguesAsync(accountName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveAllColleaguesAsync(ByVal accountName As String, ByVal userState As Object)
            If (Me.RemoveAllColleaguesOperationCompleted Is Nothing) Then
                Me.RemoveAllColleaguesOperationCompleted = AddressOf Me.OnRemoveAllColleaguesOperationCompleted
            End If
            Me.InvokeAsync("RemoveAllColleagues", New Object() {accountName}, Me.RemoveAllColleaguesOperationCompleted, userState)
        End Sub
        
        Private Sub OnRemoveAllColleaguesOperationCompleted(ByVal arg As Object)
            If (Not (Me.RemoveAllColleaguesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemoveAllColleaguesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Remove"& _ 
            "AllMemberships", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RemoveAllMemberships(ByVal accountName As String)
            Me.Invoke("RemoveAllMemberships", New Object() {accountName})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveAllMembershipsAsync(ByVal accountName As String)
            Me.RemoveAllMembershipsAsync(accountName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveAllMembershipsAsync(ByVal accountName As String, ByVal userState As Object)
            If (Me.RemoveAllMembershipsOperationCompleted Is Nothing) Then
                Me.RemoveAllMembershipsOperationCompleted = AddressOf Me.OnRemoveAllMembershipsOperationCompleted
            End If
            Me.InvokeAsync("RemoveAllMemberships", New Object() {accountName}, Me.RemoveAllMembershipsOperationCompleted, userState)
        End Sub
        
        Private Sub OnRemoveAllMembershipsOperationCompleted(ByVal arg As Object)
            If (Not (Me.RemoveAllMembershipsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemoveAllMembershipsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUse"& _ 
            "rProfileCount", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserProfileCount() As Long
            Dim results() As Object = Me.Invoke("GetUserProfileCount", New Object(-1) {})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserProfileCountAsync()
            Me.GetUserProfileCountAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserProfileCountAsync(ByVal userState As Object)
            If (Me.GetUserProfileCountOperationCompleted Is Nothing) Then
                Me.GetUserProfileCountOperationCompleted = AddressOf Me.OnGetUserProfileCountOperationCompleted
            End If
            Me.InvokeAsync("GetUserProfileCount", New Object(-1) {}, Me.GetUserProfileCountOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserProfileCountOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserProfileCountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserProfileCountCompleted(Me, New GetUserProfileCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/AddSug"& _ 
            "gestions", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub AddSuggestions(ByVal type As SuggestionType, ByVal suggestions() As String, ByVal weights() As Double)
            Me.Invoke("AddSuggestions", New Object() {type, suggestions, weights})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddSuggestionsAsync(ByVal type As SuggestionType, ByVal suggestions() As String, ByVal weights() As Double)
            Me.AddSuggestionsAsync(type, suggestions, weights, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddSuggestionsAsync(ByVal type As SuggestionType, ByVal suggestions() As String, ByVal weights() As Double, ByVal userState As Object)
            If (Me.AddSuggestionsOperationCompleted Is Nothing) Then
                Me.AddSuggestionsOperationCompleted = AddressOf Me.OnAddSuggestionsOperationCompleted
            End If
            Me.InvokeAsync("AddSuggestions", New Object() {type, suggestions, weights}, Me.AddSuggestionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddSuggestionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddSuggestionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddSuggestionsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetPro"& _ 
            "fileSchemaNames", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProfileSchemaNames() As String()
            Dim results() As Object = Me.Invoke("GetProfileSchemaNames", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProfileSchemaNamesAsync()
            Me.GetProfileSchemaNamesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProfileSchemaNamesAsync(ByVal userState As Object)
            If (Me.GetProfileSchemaNamesOperationCompleted Is Nothing) Then
                Me.GetProfileSchemaNamesOperationCompleted = AddressOf Me.OnGetProfileSchemaNamesOperationCompleted
            End If
            Me.InvokeAsync("GetProfileSchemaNames", New Object(-1) {}, Me.GetProfileSchemaNamesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProfileSchemaNamesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProfileSchemaNamesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProfileSchemaNamesCompleted(Me, New GetProfileSchemaNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetPro"& _ 
            "fileSchema", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProfileSchema(ByVal schemaName As String) As PropertyInfo()
            Dim results() As Object = Me.Invoke("GetProfileSchema", New Object() {schemaName})
            Return CType(results(0),PropertyInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProfileSchemaAsync(ByVal schemaName As String)
            Me.GetProfileSchemaAsync(schemaName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProfileSchemaAsync(ByVal schemaName As String, ByVal userState As Object)
            If (Me.GetProfileSchemaOperationCompleted Is Nothing) Then
                Me.GetProfileSchemaOperationCompleted = AddressOf Me.OnGetProfileSchemaOperationCompleted
            End If
            Me.InvokeAsync("GetProfileSchema", New Object() {schemaName}, Me.GetProfileSchemaOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProfileSchemaOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProfileSchemaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProfileSchemaCompleted(Me, New GetProfileSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetLea"& _ 
            "ders", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLeaders() As Leader()
            Dim results() As Object = Me.Invoke("GetLeaders", New Object(-1) {})
            Return CType(results(0),Leader())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLeadersAsync()
            Me.GetLeadersAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLeadersAsync(ByVal userState As Object)
            If (Me.GetLeadersOperationCompleted Is Nothing) Then
                Me.GetLeadersOperationCompleted = AddressOf Me.OnGetLeadersOperationCompleted
            End If
            Me.InvokeAsync("GetLeaders", New Object(-1) {}, Me.GetLeadersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLeadersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLeadersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLeadersCompleted(Me, New GetLeadersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/AddLea"& _ 
            "der", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub AddLeader(ByVal accountName As String)
            Me.Invoke("AddLeader", New Object() {accountName})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddLeaderAsync(ByVal accountName As String)
            Me.AddLeaderAsync(accountName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddLeaderAsync(ByVal accountName As String, ByVal userState As Object)
            If (Me.AddLeaderOperationCompleted Is Nothing) Then
                Me.AddLeaderOperationCompleted = AddressOf Me.OnAddLeaderOperationCompleted
            End If
            Me.InvokeAsync("AddLeader", New Object() {accountName}, Me.AddLeaderOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddLeaderOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddLeaderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddLeaderCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/Remove"& _ 
            "Leader", RequestNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", ResponseNamespace:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RemoveLeader(ByVal accountName As String)
            Me.Invoke("RemoveLeader", New Object() {accountName})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveLeaderAsync(ByVal accountName As String)
            Me.RemoveLeaderAsync(accountName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveLeaderAsync(ByVal accountName As String, ByVal userState As Object)
            If (Me.RemoveLeaderOperationCompleted Is Nothing) Then
                Me.RemoveLeaderOperationCompleted = AddressOf Me.OnRemoveLeaderOperationCompleted
            End If
            Me.InvokeAsync("RemoveLeader", New Object() {accountName}, Me.RemoveLeaderOperationCompleted, userState)
        End Sub
        
        Private Sub OnRemoveLeaderOperationCompleted(ByVal arg As Object)
            If (Not (Me.RemoveLeaderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemoveLeaderCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.19050"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")>  _
    Partial Public Class GetUserProfileByIndexResult
        
        Private nextValueField As String
        
        Private userProfileField() As PropertyData
        
        Private colleaguesField() As ContactData
        
        Private quickLinksField() As QuickLinkData
        
        Private pinnedLinksField() As PinnedLinkData
        
        Private membershipsField() As MembershipData
        
        '''<remarks/>
        Public Property NextValue() As String
            Get
                Return Me.nextValueField
            End Get
            Set
                Me.nextValueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserProfile() As PropertyData()
            Get
                Return Me.userProfileField
            End Get
            Set
                Me.userProfileField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Colleagues() As ContactData()
            Get
                Return Me.colleaguesField
            End Get
            Set
                Me.colleaguesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property QuickLinks() As QuickLinkData()
            Get
                Return Me.quickLinksField
            End Get
            Set
                Me.quickLinksField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PinnedLinks() As PinnedLinkData()
            Get
                Return Me.pinnedLinksField
            End Get
            Set
                Me.pinnedLinksField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Memberships() As MembershipData()
            Get
                Return Me.membershipsField
            End Get
            Set
                Me.membershipsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.19050"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")>  _
    Partial Public Class PropertyData
        
        Private isPrivacyChangedField As Boolean
        
        Private isValueChangedField As Boolean
        
        Private nameField As String
        
        Private privacyField As Privacy
        
        Private valuesField() As ValueData
        
        '''<remarks/>
        Public Property IsPrivacyChanged() As Boolean
            Get
                Return Me.isPrivacyChangedField
            End Get
            Set
                Me.isPrivacyChangedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsValueChanged() As Boolean
            Get
                Return Me.isValueChangedField
            End Get
            Set
                Me.isValueChangedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Privacy() As Privacy
            Get
                Return Me.privacyField
            End Get
            Set
                Me.privacyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Values() As ValueData()
            Get
                Return Me.valuesField
            End Get
            Set
                Me.valuesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.19050"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")>  _
    Public Enum Privacy
        
        '''<remarks/>
        [Public]
        
        '''<remarks/>
        Contacts
        
        '''<remarks/>
        Organization
        
        '''<remarks/>
        Manager
        
        '''<remarks/>
        [Private]
        
        '''<remarks/>
        NotSet
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.19050"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")>  _
    Partial Public Class ValueData
        
        Private valueField As Object
        
        '''<remarks/>
        Public Property Value() As Object
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.19050"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")>  _
    Partial Public Class Leader
        
        Private accountNameField As String
        
        Private validField As Boolean
        
        Private managerAccountNameField As String
        
        Private reportCountField As Integer
        
        '''<remarks/>
        Public Property AccountName() As String
            Get
                Return Me.accountNameField
            End Get
            Set
                Me.accountNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Valid() As Boolean
            Get
                Return Me.validField
            End Get
            Set
                Me.validField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ManagerAccountName() As String
            Get
                Return Me.managerAccountNameField
            End Get
            Set
                Me.managerAccountNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReportCount() As Integer
            Get
                Return Me.reportCountField
            End Get
            Set
                Me.reportCountField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.19050"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")>  _
    Partial Public Class InCommonData
        
        Private managerField As ContactData
        
        Private colleaguesField() As ContactData
        
        Private membershipsField() As MembershipData
        
        '''<remarks/>
        Public Property Manager() As ContactData
            Get
                Return Me.managerField
            End Get
            Set
                Me.managerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Colleagues() As ContactData()
            Get
                Return Me.colleaguesField
            End Get
            Set
                Me.colleaguesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Memberships() As MembershipData()
            Get
                Return Me.membershipsField
            End Get
            Set
                Me.membershipsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.19050"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")>  _
    Partial Public Class ContactData
        
        Private accountNameField As String
        
        Private privacyField As Privacy
        
        Private nameField As String
        
        Private isInWorkGroupField As Boolean
        
        Private groupField As String
        
        Private emailField As String
        
        Private titleField As String
        
        Private urlField As String
        
        Private userProfileIDField As System.Guid
        
        Private idField As Long
        
        '''<remarks/>
        Public Property AccountName() As String
            Get
                Return Me.accountNameField
            End Get
            Set
                Me.accountNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Privacy() As Privacy
            Get
                Return Me.privacyField
            End Get
            Set
                Me.privacyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsInWorkGroup() As Boolean
            Get
                Return Me.isInWorkGroupField
            End Get
            Set
                Me.isInWorkGroupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Group() As String
            Get
                Return Me.groupField
            End Get
            Set
                Me.groupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Email() As String
            Get
                Return Me.emailField
            End Get
            Set
                Me.emailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Title() As String
            Get
                Return Me.titleField
            End Get
            Set
                Me.titleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Url() As String
            Get
                Return Me.urlField
            End Get
            Set
                Me.urlField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserProfileID() As System.Guid
            Get
                Return Me.userProfileIDField
            End Get
            Set
                Me.userProfileIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.19050"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")>  _
    Partial Public Class MembershipData
        
        Private sourceField As MembershipSource
        
        Private memberGroupField As MemberGroupData
        
        Private groupField As String
        
        Private displayNameField As String
        
        Private privacyField As Privacy
        
        Private mailNicknameField As String
        
        Private urlField As String
        
        Private idField As Long
        
        Private memberGroupIDField As Long
        
        '''<remarks/>
        Public Property Source() As MembershipSource
            Get
                Return Me.sourceField
            End Get
            Set
                Me.sourceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberGroup() As MemberGroupData
            Get
                Return Me.memberGroupField
            End Get
            Set
                Me.memberGroupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Group() As String
            Get
                Return Me.groupField
            End Get
            Set
                Me.groupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DisplayName() As String
            Get
                Return Me.displayNameField
            End Get
            Set
                Me.displayNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Privacy() As Privacy
            Get
                Return Me.privacyField
            End Get
            Set
                Me.privacyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MailNickname() As String
            Get
                Return Me.mailNicknameField
            End Get
            Set
                Me.mailNicknameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Url() As String
            Get
                Return Me.urlField
            End Get
            Set
                Me.urlField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberGroupID() As Long
            Get
                Return Me.memberGroupIDField
            End Get
            Set
                Me.memberGroupIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.19050"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")>  _
    Public Enum MembershipSource
        
        '''<remarks/>
        DistributionList
        
        '''<remarks/>
        SharePointSite
        
        '''<remarks/>
        Other
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.19050"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")>  _
    Partial Public Class MemberGroupData
        
        Private sourceInternalField As System.Guid
        
        Private sourceReferenceField As String
        
        '''<remarks/>
        Public Property SourceInternal() As System.Guid
            Get
                Return Me.sourceInternalField
            End Get
            Set
                Me.sourceInternalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SourceReference() As String
            Get
                Return Me.sourceReferenceField
            End Get
            Set
                Me.sourceReferenceField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.19050"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")>  _
    Partial Public Class OrganizationProfileData
        
        Private displayNameField As String
        
        Private recordIDField As Long
        
        '''<remarks/>
        Public Property DisplayName() As String
            Get
                Return Me.displayNameField
            End Get
            Set
                Me.displayNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RecordID() As Long
            Get
                Return Me.recordIDField
            End Get
            Set
                Me.recordIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.19050"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")>  _
    Partial Public Class PropertyInfo
        
        Private nameField As String
        
        Private descriptionField As String
        
        Private displayOrderField As Integer
        
        Private maximumShownField As Integer
        
        Private isAdminEditableField As Boolean
        
        Private isSearchableField As Boolean
        
        Private isSystemField As Boolean
        
        Private managedPropertyNameField As String
        
        Private displayNameField As String
        
        Private typeField As String
        
        Private allowPolicyOverrideField As Boolean
        
        Private defaultPrivacyField As Privacy
        
        Private isAliasField As Boolean
        
        Private isColleagueEventLogField As Boolean
        
        Private isRequiredField As Boolean
        
        Private isUserEditableField As Boolean
        
        Private isVisibleOnEditorField As Boolean
        
        Private isVisibleOnViewerField As Boolean
        
        Private isReplicableField As Boolean
        
        Private userOverridePrivacyField As Boolean
        
        Private lengthField As Integer
        
        Private isImportedField As Boolean
        
        Private isMultiValueField As Boolean
        
        Private choiceTypeField As ChoiceTypes
        
        Private termSetIdField As System.Nullable(Of System.Guid)
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DisplayOrder() As Integer
            Get
                Return Me.displayOrderField
            End Get
            Set
                Me.displayOrderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MaximumShown() As Integer
            Get
                Return Me.maximumShownField
            End Get
            Set
                Me.maximumShownField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsAdminEditable() As Boolean
            Get
                Return Me.isAdminEditableField
            End Get
            Set
                Me.isAdminEditableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsSearchable() As Boolean
            Get
                Return Me.isSearchableField
            End Get
            Set
                Me.isSearchableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsSystem() As Boolean
            Get
                Return Me.isSystemField
            End Get
            Set
                Me.isSystemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ManagedPropertyName() As String
            Get
                Return Me.managedPropertyNameField
            End Get
            Set
                Me.managedPropertyNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DisplayName() As String
            Get
                Return Me.displayNameField
            End Get
            Set
                Me.displayNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AllowPolicyOverride() As Boolean
            Get
                Return Me.allowPolicyOverrideField
            End Get
            Set
                Me.allowPolicyOverrideField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DefaultPrivacy() As Privacy
            Get
                Return Me.defaultPrivacyField
            End Get
            Set
                Me.defaultPrivacyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsAlias() As Boolean
            Get
                Return Me.isAliasField
            End Get
            Set
                Me.isAliasField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsColleagueEventLog() As Boolean
            Get
                Return Me.isColleagueEventLogField
            End Get
            Set
                Me.isColleagueEventLogField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsRequired() As Boolean
            Get
                Return Me.isRequiredField
            End Get
            Set
                Me.isRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsUserEditable() As Boolean
            Get
                Return Me.isUserEditableField
            End Get
            Set
                Me.isUserEditableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsVisibleOnEditor() As Boolean
            Get
                Return Me.isVisibleOnEditorField
            End Get
            Set
                Me.isVisibleOnEditorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsVisibleOnViewer() As Boolean
            Get
                Return Me.isVisibleOnViewerField
            End Get
            Set
                Me.isVisibleOnViewerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsReplicable() As Boolean
            Get
                Return Me.isReplicableField
            End Get
            Set
                Me.isReplicableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserOverridePrivacy() As Boolean
            Get
                Return Me.userOverridePrivacyField
            End Get
            Set
                Me.userOverridePrivacyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Length() As Integer
            Get
                Return Me.lengthField
            End Get
            Set
                Me.lengthField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsImported() As Boolean
            Get
                Return Me.isImportedField
            End Get
            Set
                Me.isImportedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsMultiValue() As Boolean
            Get
                Return Me.isMultiValueField
            End Get
            Set
                Me.isMultiValueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ChoiceType() As ChoiceTypes
            Get
                Return Me.choiceTypeField
            End Get
            Set
                Me.choiceTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property TermSetId() As System.Nullable(Of System.Guid)
            Get
                Return Me.termSetIdField
            End Get
            Set
                Me.termSetIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.19050"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")>  _
    Public Enum ChoiceTypes
        
        '''<remarks/>
        Off
        
        '''<remarks/>
        None
        
        '''<remarks/>
        Open
        
        '''<remarks/>
        Closed
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.19050"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")>  _
    Partial Public Class SPTimeZone
        
        Private idField As UShort
        
        '''<remarks/>
        Public Property ID() As UShort
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.19050"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")>  _
    Partial Public Class PinnedLinkData
        
        Private nameField As String
        
        Private urlField As String
        
        Private idField As Long
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Url() As String
            Get
                Return Me.urlField
            End Get
            Set
                Me.urlField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.19050"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")>  _
    Partial Public Class QuickLinkData
        
        Private nameField As String
        
        Private groupField As String
        
        Private privacyField As Privacy
        
        Private urlField As String
        
        Private idField As Long
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Group() As String
            Get
                Return Me.groupField
            End Get
            Set
                Me.groupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Privacy() As Privacy
            Get
                Return Me.privacyField
            End Get
            Set
                Me.privacyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Url() As String
            Get
                Return Me.urlField
            End Get
            Set
                Me.urlField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.19050"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://microsoft.com/webservices/SharePointPortalServer/UserProfileService")>  _
    Public Enum SuggestionType
        
        '''<remarks/>
        Colleague
        
        '''<remarks/>
        Keyword
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetUserProfileByIndexCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserProfileByIndexCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserProfileByIndexCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetUserProfileByIndexResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetUserProfileByIndexResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub CreateUserProfileByAccountNameCompletedEventHandler(ByVal sender As Object, ByVal e As CreateUserProfileByAccountNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateUserProfileByAccountNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PropertyData()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PropertyData())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetUserProfileByNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserProfileByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserProfileByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PropertyData()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PropertyData())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetUserProfileByGuidCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserProfileByGuidCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserProfileByGuidCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PropertyData()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PropertyData())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetUserProfileSchemaCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserProfileSchemaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserProfileSchemaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PropertyInfo()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PropertyInfo())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetProfileSchemaNameByAccountNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetProfileSchemaNameByAccountNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProfileSchemaNameByAccountNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetPropertyChoiceListCompletedEventHandler(ByVal sender As Object, ByVal e As GetPropertyChoiceListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPropertyChoiceListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub ModifyUserPropertyByAccountNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetUserPropertyByAccountNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserPropertyByAccountNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserPropertyByAccountNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PropertyData
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PropertyData)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub CreateMemberGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AddMembershipCompletedEventHandler(ByVal sender As Object, ByVal e As AddMembershipCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddMembershipCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MembershipData
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MembershipData)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub RemoveMembershipCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub UpdateMembershipPrivacyCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetUserMembershipsCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserMembershipsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserMembershipsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MembershipData()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MembershipData())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetUserOrganizationsCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserOrganizationsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserOrganizationsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As OrganizationProfileData()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),OrganizationProfileData())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetUserColleaguesCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserColleaguesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserColleaguesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ContactData()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ContactData())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetUserLinksCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserLinksCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserLinksCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As QuickLinkData()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),QuickLinkData())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetUserPinnedLinksCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserPinnedLinksCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserPinnedLinksCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PinnedLinkData()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PinnedLinkData())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetInCommonCompletedEventHandler(ByVal sender As Object, ByVal e As GetInCommonCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetInCommonCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As InCommonData
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),InCommonData)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetCommonManagerCompletedEventHandler(ByVal sender As Object, ByVal e As GetCommonManagerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCommonManagerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ContactData
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ContactData)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetCommonColleaguesCompletedEventHandler(ByVal sender As Object, ByVal e As GetCommonColleaguesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCommonColleaguesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ContactData()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ContactData())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetCommonMembershipsCompletedEventHandler(ByVal sender As Object, ByVal e As GetCommonMembershipsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCommonMembershipsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MembershipData()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MembershipData())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AddColleagueCompletedEventHandler(ByVal sender As Object, ByVal e As AddColleagueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddColleagueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ContactData
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ContactData)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AddColleagueWithoutEmailNotificationCompletedEventHandler(ByVal sender As Object, ByVal e As AddColleagueWithoutEmailNotificationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddColleagueWithoutEmailNotificationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ContactData
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ContactData)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub RemoveColleagueCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub UpdateColleaguePrivacyCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AddPinnedLinkCompletedEventHandler(ByVal sender As Object, ByVal e As AddPinnedLinkCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddPinnedLinkCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PinnedLinkData
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PinnedLinkData)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub UpdatePinnedLinkCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub RemovePinnedLinkCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AddLinkCompletedEventHandler(ByVal sender As Object, ByVal e As AddLinkCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddLinkCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As QuickLinkData
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),QuickLinkData)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub UpdateLinkCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub RemoveLinkCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub RemoveAllLinksCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub RemoveAllPinnedLinksCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub RemoveAllColleaguesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub RemoveAllMembershipsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetUserProfileCountCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserProfileCountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserProfileCountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AddSuggestionsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetProfileSchemaNamesCompletedEventHandler(ByVal sender As Object, ByVal e As GetProfileSchemaNamesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProfileSchemaNamesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetProfileSchemaCompletedEventHandler(ByVal sender As Object, ByVal e As GetProfileSchemaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProfileSchemaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PropertyInfo()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PropertyInfo())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetLeadersCompletedEventHandler(ByVal sender As Object, ByVal e As GetLeadersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLeadersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Leader()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Leader())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AddLeaderCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub RemoveLeaderCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
End Namespace
